# Default values for enabler.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# String to partially override enabler.fullname template (will maintain the release name).
nameOverride: ""
# String to fully override enabler.fullname template.
fullnameOverride: ""
# Deploy all the components in specific K8s node(s).
enablerNodeSelector: {}
# Cilium Multi-cluster global service.
globalService: false

# Component web values.
web:
  tier: external
  replicaCount: 1

  # Configuration of the container image.
  imagePullSecrets: [name: regcred]
  image:
    repository: assistiot/tacticle_dashboard
    # Overrides the image tag whose default is the chart appVersion.
    tag: "web-latest"
    pullPolicy: Always

  # Configuration of the service: type and ports.
  service:
    type: NodePort
    ports:
      port1:
        port: 80
        targetPort: 80
        containerPort: 80
        nodePort: "30280"
        protocol: TCP

  # The specification of the resources is needed for the proper functioning
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits).
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    # minReplicas: 1
    # maxReplicas: 3
    # targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  envVars:
    ENABLE_AUTH_IDM: false

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Configure this parameters to deploy the component in specific K8s node(s).
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component api values.
api:
  tier: internal
  replicaCount: 1

  # Configuration of the container image.
  imagePullSecrets: [name: regcred]
  image:
    repository: assistiot/tacticle_dashboard
    # Overrides the image tag whose default is the chart appVersion.
    tag: "api-latest"
    pullPolicy: IfNotPresent

  # Configuration of the service: type and ports.
  service:
    type: ClusterIP
    ports:
      port1:
        port: 8080
        targetPort: 8080
        containerPort: 8080
        protocol: TCP

  # The specification of the resources is needed for the proper functioning
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits).
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    # minReplicas: 1
    # maxReplicas: 3
    # targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000


  # Configure this parameters to deploy the component in specific K8s node(s).
  nodeSelector: {}
  tolerations: []
  affinity: {}

  catalina_ops:
    xms: 1024m
    xmx: 1024m
    debug: "-agentlib:jdwp=transport=dt_socket,address=8765,server=y,suspend=n"
    logs: /var/log

# Component db values.
db:
  tier: internal
  replicaCount: 1

  # Configuration of the container image.
  imagePullSecrets: [name: regcred]
  image:
    repository: assistiot/tacticle_dashboard
    # Overrides the image tag whose default is the chart appVersion.
    tag: "db-latest"
    pullPolicy: IfNotPresent

  # Configuration of the service: type and ports.
  service:
    # type: NodePort
    type: ClusterIP
    ports:
      port1:
        port: 5432
        targetPort: 5432
        containerPort: 5432
        # nodePort: "30432"
        protocol: TCP

  # The specification of the resources is needed for the proper functioning
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits).
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    # minReplicas: 1
    # maxReplicas: 3
    # targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # Include here the environment variables to be used in containers section of the component's manifest.
  # TODO: Here and in the manifest is included an example, please adapt them to the requirements of your component.
  envVars:
    POSTGRES_USER: dashboard
    POSTGRES_DB: dashboard-pui9
    POSTGRES_PASSWORD: docker

  # Component data persistence
  persistence:
    enabled: true
    existingClaim: ""
    # mountPath: /path/in/container
    accessModes:
      - ReadWriteOnce
    size: 500Mi

  # Configure this parameters to deploy the component in specific K8s node(s).
  nodeSelector: {}
  tolerations: []
  affinity: {}

  urlExternalServices:
    KIBANA_URL: http://kibana:50000/
    PROMETHEUS_URL: http://prometheus:50000/

  Keykloack:
    PUBLIC_KEY: "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtOsrklD9y9g3CZQFjeY5VjRK2NhnR+Vl5XniI+Pxt7eHBctq4UHyG5I5qZ7MKxV85lhXdaqCK6wyGb8RK3P7dKS8srv3vBSdAQ6UOqtyS0I+hPcjwDGiQ9SShPxx6xVAthx+6DUkTkubNz+nwAca0YhfKKwL5TpXVhQ0NqXNL3RHPUgraPQpTezdyv6cuOp4PU8MjSjkJ+zX+ZALTe+I1UF1F5H7avTv7gSsSV4JuirvkVfjGe1S9p+WMdtULNXgp8uYV3jdC5nvz7ULxyvwk5PpNXqrdQD6Q19JhaeR/LQSvoxpjBwVj0Mmm++F3AQYnQWoMvurfZm9nkXHUBs0ZQIDAQAB"
    SECRET: "YLjSDvPfDVLqGkIRR4mHjHWhFRy0nEwK"
    TOKEN_ENDPOINT: "http://idm.10.10.140.30.nip.io/auth/realms/assist-iot/protocol/openid-connect/token"
    CLIEN_ID: "dashboardpui9-webapp"

  Authzserver:
    URL_EVALUATE: "http://authzserver.10.10.140.30.nip.io/authzserver/rest/evaluate"
    SECURITY_DOMAIN: "assist_pilot1"
